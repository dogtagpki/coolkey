# $Id$
#
# BEGIN COPYRIGHT BLOCK
# Copyright (C) 2005 Red Hat, Inc.
# All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation version
# 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# END COPYRIGHT BLOCK

# Require autoconf 2.52
AC_PREREQ(2.52)

# Process this file with autoconf to produce a configure script.
AC_INIT(coolkey,"1.1.0")
AC_CONFIG_SRCDIR([pkcs11/smartcard/coolkey.cpp])
AC_CANONICAL_TARGET([])
AM_INIT_AUTOMAKE(coolkey, "1.1.0")
AC_CONFIG_HEADERS([config.h])

AM_MAINTAINER_MODE

# Add argument for debuging
AC_ARG_ENABLE(debug, 
  [  --enable-debug          add debugging code (default=yes)])
if test "$enable_debug" = "no" -o "$enable_debug" = "false"
then
  AC_MSG_WARN([Debugging support is completely disabled!])
else
  AC_DEFINE(DEBUG, 1, [Define to 1 if you want to include debugging code.])
fi

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S

# Checks for libraries.
AC_CHECK_LIB(z, uncompress, , AC_MSG_ERROR(could not locate libz compression library))
AC_CHECK_LIB(dl, dlopen, , AC_MSG_ERROR(could not locate dynamic library services library))

# add our compiled static libraries
AC_SUBST(LIBCKYAPPLET)
LIBCKYAPPLET="\${top_builddir}/clib/libckyapplet.la"

PCSC_MSG=no
pcsc_path=/usr
AC_SUBST(PCSC_CFLAGS)
AC_SUBST(PCSC_LIBS)
AC_SUBST(SCARD_LIB_NAME)

case "$host" in
*-*-win*)
	SCARD_LIB_NAME="winscard.dll"
	;;
*-*-darwin*)
	SCARD_LIB_NAME="PCSC.Framework/PCSC"
	PCSC_MSG=yes
	PCSC_CFLAGS=""
	PCSC_LIBS="-Wl,-framework,PCSC"
	;;
*)
        # should look it up on the local system
	SCARD_LIB_NAME="libpcsclite.so.1"
	;;
esac

saved_LIBS="$LIBS"
saved_CFLAGS="$CFLAGS"
saved_LDFLAGS="$LDFLAGS"
saved_CPPFLAGS="$CPPFLAGS"
AC_ARG_WITH(pcsclite,
	[  --with-pcsclite=PATH    use PC/SC Lite in PATH],
	[pcsc_path=$withval])
if test "x$pcsc_path" = "xno"; then
	PCSC_MSG="no"
fi
if test "x$pcsc_path" != "xno" -a "x$PCSC_MSG" != "xyes"; then
	PKG_CHECK_MODULES(PCSC, libpcsclite, [
		PCSC_MSG="yes"
		AC_MSG_RESULT($PCSC_MSG)
		],[
	AC_MSG_CHECKING(for PC/SC Lite support (old style))
	for pcscdir in "" /PCSC; do
		CPPFLAGS="$saved_CPPFLAGS"
		LDFLAGS="$saved_LDFLAGS"
		LIBS="-lpcsclite $saved_LIBS"
		PCSC_CFLAGS=""

		for pcsc_libdir in $pcsc_path/lib$pcscdir \
			      $pcsc_path$pcscdir/lib \
			      $pcsc_path$pcscdir; do
			if test -d $pcsc_libdir; then
				if test -n "${need_dash_r}"; then
					LDFLAGS="-R${pcsc_libdir}/ ${LDFLAGS}"
				fi
				LDFLAGS="-L${pcsc_libdir} ${LDFLAGS}"
			fi
		done

		for pcsc_incdir in $pcsc_path/include$pcscdir \
			      $pcsc_path$pcscdir/include \
			      $pcsc_path$pcscdir; do
		      if test -d $pcsc_incdir; then
				PCSC_CFLAGS="-I${pcsc_incdir}"
				break;
		      fi
		done

		CPPFLAGS="${PCSC_CFLAGS} ${CPPFLAGS}"
		AC_TRY_LINK([#include <stdlib.h>
#include <winscard.h>],[SCardEstablishContext(0, NULL, NULL, NULL);], ac_cv_lib_pcsclite_SCardEstablishContext=yes)
		if test "x$ac_cv_lib_pcsclite_SCardEstablishContext" = "xyes"; then
			PCSC_MSG=yes
			break;
		fi
		CPPFLAGS="$saved_CPPFLAGS"
		LDFLAGS="$saved_LDFLAGS"
		LIBS="$saved_LIBS"
		PCSC_CFLAGS=""
	done
	AC_MSG_RESULT($PCSC_MSG)
	if test "x$PCSC_MSG" = "xyes" ; then
		PCSC_LIBS="-lpcsclite"
		CPPFLAGS="$saved_CPPFLAGS"
		LIBS="$saved_LIBS"
	fi
	])
fi
AM_CONDITIONAL(HAVE_PCSC, test "x$PCSC_MSG" = "xyes")
if test "x$PCSC_MSG" = "xyes"; then
	AC_DEFINE(HAVE_PCSC, 1, [Have PC/SC implementation])
else
	PCSC_LIBS=""
	PCSC_CFLAGS=""
fi

if test "x$PCSC_MSG" = "xyes"; then
	CPPFLAGS="${PCSC_CFLAGS} $saved_CPPFLAGS"
	CFLAGS="$PCSC_CFLAGS $saved_CFLAGS"
	LIBS="$PCSC_LIBS $saved_LIBS"
	AC_TRY_LINK([
#include <stdlib.h>
#ifdef __APPLE__
#include <PCSC/wintypes.h>
#include <PCSC/winscard.h>
#else
#include <winscard.h>
#endif
	], [
SCardControl(NULL, NULL, 0, NULL, NULL);
	], [
		AC_DEFINE(HAVE_PCSC_OLD, 1, [old version of pc/sc-lite])
	])
	CPPFLAGS="$saved_CPPFLAGS"
	CFLAGS="$saved_CFLAGS"
	LIBS="$saved_LIBS"
fi

AC_DEFINE(DEBUG, 1, [Define to 1 if you want to include debugging code.])
# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([string.h syslog.h fcntl.h unistd.h])
AC_CHECK_HEADERS([zlib.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([memset strdup strerror])


AC_CONFIG_FILES([ 
Makefile
clib/Makefile
pkcs11/smartcard/Makefile
])
AC_OUTPUT
